<?xml version="1.0"?>
  <database name="VIEW EFIN_INVOICE_DAILY_STATUS_V">
    <view name="EFIN_INVOICE_DAILY_STATUS_V"><![CDATA[SELECT main.fin_year, main.account_classification_ar, sum(main.completed_invoices) AS completed_invoices, main.fund_budget, main.element_count, trunc(sum(main.completed_invoices) / CASE WHEN main.fund_budget = 0 THEN 1 ELSE main.fund_budget END * 100, 2) || ' %' AS exp_fb_percent, trunc(main.fund_budget / CASE WHEN main.fb_total = 0 THEN 1 ELSE main.fb_total END * 100, 2) || ' %' AS fb_percent, trunc(sum(main.completed_invoices) / CASE WHEN main.total_expenditure = 0 THEN 1 ELSE main.total_expenditure END * 100, 2) || ' %' AS exp_percent, main.total_expenditure, trunc(main.fb_total, 2) AS fb_total, trunc(sum(main.total_expenditure) / CASE WHEN main.fb_total = 0 THEN 1 ELSE main.fb_total END * 100, 2) || ' %' AS total_percent FROM (SELECT COALESCE(e.em_efin_classification_ar, 'أخرى') AS account_classification_ar, CASE WHEN inv.docstatus = 'CO' THEN round(sum(inv.linenetamt)) ELSE 0 END AS completed_invoices, (SELECT round(COALESCE(sum(binq.current_budget), 0)) AS round FROM c_elementvalue e1, efin_budgetint bint, efin_budgetinquiry binq, c_salesregion salereg, c_campaign comp WHERE 1 = 1 AND bint.efin_budgetint_id = binq.efin_budgetint_id AND binq.c_salesregion_id = salereg.c_salesregion_id AND binq.c_elementvalue_id = e1.c_elementvalue_id AND binq.c_campaign_id = comp.c_campaign_id AND COALESCE(e1.em_efin_classification_ar, 'other') = COALESCE(e.em_efin_classification_ar, 'other') AND comp.value = '02' AND salereg.value = '990' AND bint.c_year_id = e.c_year_id AND (e1.value LIKE '21%' OR e1.value LIKE '22%' OR e1.value LIKE '23%' OR e1.value LIKE '24%' OR e1.value LIKE '25%' OR e1.value LIKE '26%' OR e1.value LIKE '27%' OR e1.value LIKE '28%' OR e1.value LIKE '30%' OR e1.value LIKE '36%' OR e1.value LIKE '37%' OR e1.value LIKE '4%')) AS fund_budget, (SELECT count(c_elementvalue.value) AS count FROM c_elementvalue WHERE COALESCE(c_elementvalue.em_efin_classification_ar, 'other') = COALESCE(e.em_efin_classification_ar, 'other')) AS element_count, (SELECT round(COALESCE(sum(binq.current_budget), 0)) AS round FROM c_elementvalue e1, efin_budgetint bint, efin_budgetinquiry binq, c_salesregion salereg, c_campaign comp WHERE 1 = 1 AND bint.efin_budgetint_id = binq.efin_budgetint_id AND binq.c_salesregion_id = salereg.c_salesregion_id AND binq.c_elementvalue_id = e1.c_elementvalue_id AND binq.c_campaign_id = comp.c_campaign_id AND comp.value = '02' AND salereg.value = '990' AND bint.c_year_id = e.c_year_id AND (e1.value LIKE '21%' OR e1.value LIKE '22%' OR e1.value LIKE '23%' OR e1.value LIKE '24%' OR e1.value LIKE '25%' OR e1.value LIKE '26%' OR e1.value LIKE '27%' OR e1.value LIKE '28%' OR e1.value LIKE '30%' OR e1.value LIKE '36%' OR e1.value LIKE '37%' OR e1.value LIKE '4%')) AS fb_total, (SELECT sum(ab.linenetamt) AS sum FROM (SELECT round(sum(invl1.linenetamt) * CASE WHEN inv1.c_currency_id = '317' THEN 1 ELSE COALESCE((SELECT c_conversion_rate.multiplyrate FROM c_conversion_rate WHERE c_conversion_rate.c_currency_id = inv1.c_currency_id), 1) END) AS linenetamt FROM efin_budgetint bint, c_invoice inv1, c_invoiceline invl1, c_elementvalue e1 WHERE inv1.c_invoice_id = invl1.c_invoice_id AND invl1.em_efin_c_elementvalue_id = e1.c_elementvalue_id AND inv1.docstatus = 'CO' AND inv1.em_efin_budgetint_id = bint.efin_budgetint_id AND bint.c_year_id = e.c_year_id AND e1.accounttype = 'E' AND (e1.value LIKE '21%' OR e1.value LIKE '22%' OR e1.value LIKE '23%' OR e1.value LIKE '24%' OR e1.value LIKE '25%' OR e1.value LIKE '26%' OR e1.value LIKE '27%' OR e1.value LIKE '28%' OR e1.value LIKE '30%' OR e1.value LIKE '36%' OR e1.value LIKE '37%' OR e1.value LIKE '4%') GROUP BY inv1.c_currency_id) ab) AS total_expenditure, e.fin_year, e.c_year_id FROM (SELECT e_1.value, e_1.c_elementvalue_id, e_1.em_efin_classification_ar, e_1.accounttype, yr.description AS fin_year, yr.c_year_id FROM c_elementvalue e_1, c_year yr WHERE yr.description IN ('1440', '1441')) e LEFT JOIN (SELECT invl.em_efin_c_elementvalue_id, inv_1.docstatus, invl.linenetamt * CASE WHEN inv_1.c_currency_id = '317' THEN 1 ELSE COALESCE((SELECT c_conversion_rate.multiplyrate FROM c_conversion_rate WHERE c_conversion_rate.c_currency_id = inv_1.c_currency_id), 1) END AS linenetamt, inv_1.dateinvoiced, hist.created AS approved_date, bint.c_year_id FROM efin_budgetint bint, c_invoiceline invl, c_invoice inv_1 JOIN (SELECT DISTINCT a.c_invoice_id, trunc(a.created) AS created, a.seqno FROM efin_purchasein_app_hist a) hist ON inv_1.c_invoice_id = hist.c_invoice_id JOIN (SELECT h.c_invoice_id, max(h.seqno) AS seqno FROM efin_purchasein_app_hist h GROUP BY h.c_invoice_id) hist1 ON hist.c_invoice_id = hist1.c_invoice_id AND hist.seqno = hist1.seqno WHERE inv_1.c_invoice_id = invl.c_invoice_id AND inv_1.em_efin_budgetint_id = bint.efin_budgetint_id AND (inv_1.docstatus IN ('CO', 'EFIN_WFA')) UNION ALL SELECT fa.account_id AS em_efin_c_elementvalue_id, gl.docstatus, abs(gll.amtsourcedr - gll.amtsourcecr) AS linenetamt, gl.datedoc AS dateinvoiced, trunc(appr_hist.approved_date) AS approved_date, bint.c_year_id FROM efin_budgetint bint, gl_journal gl, gl_journalline gll, fact_acct fa, (SELECT max(appr.approveddate) AS approved_date, appr.gl_journal_id FROM eut_journal_approval appr GROUP BY appr.gl_journal_id) appr_hist WHERE gl.gl_journal_id = gll.gl_journal_id AND gl.gl_journal_id = appr_hist.gl_journal_id AND gl.documentno = fa.em_efin_documentno AND fa.account_id = gll.em_efin_account AND fa.em_efin_acctseq IS NOT NULL AND gl.em_efin_adj_invoice = 'N' AND gl.em_efin_budgetint_id = bint.efin_budgetint_id) inv ON e.c_elementvalue_id = inv.em_efin_c_elementvalue_id AND e.c_year_id = inv.c_year_id WHERE e.accounttype = 'E' AND (e.value LIKE '21%' OR e.value LIKE '22%' OR e.value LIKE '23%' OR e.value LIKE '24%' OR e.value LIKE '25%' OR e.value LIKE '26%' OR e.value LIKE '27%' OR e.value LIKE '28%' OR e.value LIKE '30%' OR e.value LIKE '36%' OR e.value LIKE '37%' OR e.value LIKE '4%') GROUP BY e.em_efin_classification_ar, inv.docstatus, e.fin_year, e.c_year_id) main GROUP BY main.fin_year, main.c_year_id, main.account_classification_ar, main.fund_budget, main.element_count, main.total_expenditure, (trunc(main.fb_total, 2)), main.fb_total ORDER BY main.account_classification_ar, main.fin_year]]></view>
  </database>
