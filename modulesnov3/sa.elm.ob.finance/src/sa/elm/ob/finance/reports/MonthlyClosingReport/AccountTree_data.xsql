<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SLU
 * Contributions are Copyright (C) 2001-2013 Openbravo S.L.U.
 ******************************************************************************
-->





<SqlClass name="AccountTreeData" package="sa.elm.ob.finance.reports.MonthlyClosingReport" accessModifier="public">
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID, coalesce( m.em_efin_mof_account,m.Value) as account,
         m.Name AS NAME,m.Description, m.IsSummary, 
        'N' as ACCOUNTSIGN, m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        0 as QTYCREDIT, 0 as QTYCREDIT_REF, m.ShowValueCond, m.ElementLevel, m.Value, 
        'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown, '' as sign,m.elementlevel as level,'' as intialamtdr,'' as intialamtcr,prj.value as project
        FROM AD_TreeNode tn, C_ElementValue m
         left join  c_project prj on prj.c_project_id=m.em_efin_project_id 
        WHERE tn.IsActive='Y' 
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo
      ]]></Sql>
        <Parameter name="adTreeId"/>
  </SqlMethod>
    <SqlMethod name="selectAdjustment" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID, coalesce( m.em_efin_mof_account,m.Value) as account,
         m.Name AS NAME,m.Description, m.IsSummary, 
        'N' as ACCOUNTSIGN, m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        0 as QTYCREDIT, 0 as QTYCREDIT_REF, m.ShowValueCond, m.ElementLevel, m.Value, 
        'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown, '' as sign,m.elementlevel as level,'' as intialamtdr,'' as intialamtcr,prj.value as project
        FROM AD_TreeNode tn, C_ElementValue m
        left join  c_project prj on prj.c_project_id=m.em_efin_project_id 
        WHERE tn.IsActive='Y' 
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo
      ]]></Sql>
        <Parameter name="adTreeId"/>
  </SqlMethod>
  <SqlMethod name="selectExpenseElement" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID, coalesce( m.em_efin_mof_account,m.Value) as account,
         m.Name AS NAME,m.Description, m.IsSummary, 
        'N' as ACCOUNTSIGN, m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        0 as QTYCREDIT, 0 as QTYCREDIT_REF, m.ShowValueCond, m.ElementLevel, m.Value, 
        'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown, '' as sign,m.elementlevel as level,'' as intialamtdr,'' as intialamtcr,prj.value as project
        FROM AD_TreeNode tn, C_ElementValue m
        left join  c_project prj on prj.c_project_id=m.em_efin_project_id 
        WHERE tn.IsActive='Y' 
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo
      ]]></Sql>
        <Parameter name="adTreeId"/>
  </SqlMethod>
  <SqlMethod name="selectRevenue" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID, coalesce( m.em_efin_mof_account,m.Value) as account,
         m.Name AS NAME,m.Description, m.IsSummary, 
        'N' as ACCOUNTSIGN, m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        0 as QTYCREDIT, 0 as QTYCREDIT_REF, m.ShowValueCond, m.ElementLevel, m.Value, 
        'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown, '' as sign,m.elementlevel as level,'' as intialamtdr,'' as intialamtcr,prj.value as project
        FROM AD_TreeNode tn, C_ElementValue m
        left join  c_project prj on prj.c_project_id=m.em_efin_project_id 
        WHERE tn.IsActive='Y' 
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo
      ]]></Sql>
        <Parameter name="adTreeId"/>
  </SqlMethod>
  <SqlMethod name="selectTrl" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID,coalesce( m.em_efin_mof_account,m.Value) as account, COALESCE(mt.Name, m.Name) as Name, 
        COALESCE(mt.Description, m.Description) as description ,m.IsSummary,'N' as ACCOUNTSIGN, 
        m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        m.ShowValueCond, m.ElementLevel, m.Value, 'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown,m.elementlevel as level
        FROM C_ElementValue m left join C_ElementValue_Trl mt on m.C_ElementValue_ID = mt.C_ElementValue_ID 
                                                              and mt.AD_Language = ? ,
              AD_TreeNode tn
        WHERE tn.IsActive='Y' and m.C_ElementValue_ID not in (select c_elementvalue_id from efin_budget)
        and m.accounttype <> 'R'
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo 
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTreeId"/>        
  </SqlMethod>
   <SqlMethod name="selectAdjustmentTrl" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT tn.Node_ID,tn.Parent_ID,tn.SeqNo, m.C_ElementValue_ID AS ID,coalesce( m.em_efin_mof_account,m.Value) as account, COALESCE(mt.Name, m.Name) as Name, 
        COALESCE(mt.Description, m.Description) as description ,m.IsSummary,'N' as ACCOUNTSIGN, 
        m.ShowElement, 0 as element_level, 0 as qty, 0 as qty_ref, 0 as qty_operation, 0 as qty_operation_ref, 
        m.ShowValueCond, m.ElementLevel, m.Value, 'N' AS CALCULATED, 'N' AS SVCRESET, 'N' AS SVCRESETREF, m.isalwaysshown,m.elementlevel as level
        FROM C_ElementValue m left join C_ElementValue_Trl mt on m.C_ElementValue_ID = mt.C_ElementValue_ID 
                                                              and mt.AD_Language = ? ,
              AD_TreeNode tn
        WHERE tn.IsActive='Y' and m.C_ElementValue_ID not in (select c_elementvalue_id from efin_budget)
        and m.accounttype <> 'R'
        AND tn.Node_ID = m.C_ElementValue_ID 
        AND tn.AD_Tree_ID = ? 
        ORDER BY COALESCE(tn.Parent_ID, '-1'), tn.SeqNo 
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTreeId"/>        
  </SqlMethod>
  
  <SqlMethod name="selectAcct" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT ID, SUM(QTY) AS QTY, SUM(QTYCREDIT) AS QTYCREDIT, SUM(QTY_REF) AS QTY_REF, SUM(QTYCREDIT_REF) AS QTYCREDIT_REF 
        FROM (
        SELECT m.C_ElementValue_ID as id, (COALESCE(f.AMTACCTDR,0) - COALESCE(f.AMTACCTCR, 0)) AS qty, 
        (COALESCE(f.AMTACCTCR,0) - COALESCE(f.AMTACCTDR, 0)) AS qtyCredit, 0 as qty_ref, 0 as qtyCredit_ref
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN ('1') 
                AND m.AD_Client_ID IN ('1')
                AND 1=1 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 0=0 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND Y.YEAR IN ('1') 
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, (COALESCE(f.AMTACCTDR,0) - COALESCE(f.AMTACCTCR, 0)) AS qty_ref, 
                (COALESCE(f.AMTACCTCR,0) - COALESCE(f.AMTACCTDR, 0)) AS qtyCredit_ref 
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN('2') 
                AND m.AD_Client_ID IN('2') 
                AND 2=2 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 1=1 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND y.YEAR IN ('1') 
        ) AA
        GROUP BY ID
      ]]></Sql>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="dateFrom" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateTo" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 1=1 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 0=0 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agno" optional="true" type="replace" after="AND Y.YEAR IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 2=2 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 1=1 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agnoRef" optional="true" type="replace" after="AND y.YEAR IN (" text="'1'"/>
  </SqlMethod>
  <SqlMethod name="selectFactAcct" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT ID, SUM(QTY) AS QTY, SUM(QTYCREDIT) AS QTYCREDIT, SUM(QTY_REF) AS QTY_REF, SUM(QTYCREDIT_REF) AS QTYCREDIT_REF 
        FROM (
        SELECT m.C_ElementValue_ID as id, (COALESCE(f.AMTACCTDR,0) - COALESCE(f.AMTACCTCR, 0)) AS qty, 
        (COALESCE(f.AMTACCTCR,0) - COALESCE(f.AMTACCTDR, 0)) AS qtyCredit, 0 as qty_ref, 0 as qtyCredit_ref,m.isactive as active
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN ('1') 
                AND m.AD_Client_ID IN ('1')
                AND 1=1 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 0=0 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype in ('E','R')
            AND Y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, (COALESCE(f.AMTACCTDR,0) - COALESCE(f.AMTACCTCR, 0)) AS QTY,
        (COALESCE(f.AMTACCTCR,0) - COALESCE(f.AMTACCTDR, 0)) as qtyCredit, 0 AS qty_ref, 
                0 AS qtyCredit_ref ,m.isactive as active
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN('2') 
                AND m.AD_Client_ID IN('2') 
                AND 2=2 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 1=1 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype in ('A','L','O')
            AND f.DATEACCT < to_date(?)
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        ) AA
        GROUP BY ID
      ]]></Sql>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="dateFrom" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateTo" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 1=1 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 0=0 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agno" optional="true" type="replace" after="AND Y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwner"/>
        
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="acctschema" optional="true" after="AND 2=2 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 1=1 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="dateToref" />
        <Parameter name="openingEntryOwnerRef"/>
        
  </SqlMethod>  
   <SqlMethod name="selectAdjustmentBalance" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT ID, SUM(QTY) AS QTY, SUM(QTYCREDIT) AS QTYCREDIT, SUM(QTY_REF) AS intialamtdr, SUM(QTYCREDIT_REF) AS intialamtcr ,SUM(intialamtcr) AS QTYCREDIT_REF,
        SUM(intialamtdr) AS QTY_REF
        FROM (
        SELECT m.C_ElementValue_ID as id, COALESCE(f.AMTACCTDR,0) AS qty, 
        COALESCE(f.AMTACCTCR,0) AS qtyCredit, 0 as qty_ref, 0 as qtyCredit_ref,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN ('1') 
                AND m.AD_Client_ID IN ('1')
                AND 1=1 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 0=0 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND Y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
           and C_ElementValue_ID not in (select c_elementvalue_id from efin_budget)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN('2') 
                AND m.AD_Client_ID IN('2') 
                AND 2=2 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 4=4   AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype in ('E','R')
            AND y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
            and C_ElementValue_ID not in (select c_elementvalue_id from efin_budget)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE   m.AD_Org_ID IN('3') 
                AND   m.AD_Client_ID IN('3') 
                AND   3=3 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 5=5    AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype in ('A','L','O')
            AND f.DATEACCT < to_date(?)
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
            and C_ElementValue_ID not in (select c_elementvalue_id from efin_budget)                                       
        ) AA
        GROUP BY ID
      ]]></Sql>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="dateFrom" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateTo" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 1=1 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 0=0 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agno" optional="true" type="replace" after="AND Y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwner"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 2=2 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 4=4   AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agnoRef" optional="true" type="replace" after="AND y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwnerRef"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="WHERE   m.AD_Org_ID IN(" text="'3'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="AND   m.AD_Client_ID IN(" text="'3'"/>
        <Parameter name="dateFromRef" optional="true" after="AND   3=3 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND   3=3 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND   3=3 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 5=5    AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="openingEntryOwnerRef"/>
        
  </SqlMethod> 
    <SqlMethod name="selectExpenses" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT ID, (SUM(QTY)-SUM(QTYCREDIT)) AS QTY,
        (SUM(intialamtdr)-SUM(intialamtcr)) AS QTY_REF,
        (SUM(currentintialamtdr)-SUM(currentintialamtcr))AS QTYCREDIT,SUM(QTYCREDIT_REF) as QTYCREDIT_REF
        FROM (
        SELECT m.C_ElementValue_ID as id, COALESCE(f.AMTACCTDR,0) AS qty, 
        COALESCE(f.AMTACCTCR,0) AS qtyCredit, 0 as qty_ref, 0 as qtyCredit_ref,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN ('1') 
                AND m.AD_Client_ID IN ('1')
                AND 1=1 
                AND m.C_ElementValue_ID = f.Account_ID
            AND 0=0 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND Y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN('2') 
                AND m.AD_Client_ID IN('2') 
                AND 2=2 
                AND m.C_ElementValue_ID = f.Account_ID
            AND 1=1 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype IN ('E','R')
            AND y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
                           
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE   m.AD_Org_ID IN('2') 
                AND   m.AD_Client_ID IN('2') 
                AND 5=5 
                AND m.C_ElementValue_ID = f.Account_ID
            AND 6=6 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype IN ('A','L','O')
            AND f.DATEACCT < to_date(?)
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
                                              
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtdr,
                case when (DATEACCT <= to_date(?))
                then  AMTACCTCR else 0 end as currentintialamtcr,
                case when (DATEACCT <= to_date(?))
                then  AMTACCTDR else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE       m.AD_Org_ID IN('2') 
                AND     m.AD_Client_ID IN('2') 
                AND         3=3
                AND m.C_ElementValue_ID = f.Account_ID
            AND         4=4 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND         y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        ) AA
        GROUP BY ID
      ]]></Sql>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="dateFrom" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateTo" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 1=1 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 0=0 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agno" optional="true" type="replace" after="AND Y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwner"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 2=2 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 1=1 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agnoRef" optional="true" type="replace" after="AND y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwnerRef"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="WHERE   m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="AND   m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 5=5 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 5=5 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 5=5 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 6=6 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="openingEntryOwnerRef"/>
        
        <Parameter name="dateTo"/>
        <Parameter name="dateTo"/>
        <Parameter name="dateTo"/>
        <Parameter name="dateTo"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="WHERE       m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="AND     m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND         3=3"><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND         3=3"><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND         3=3"><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND         4=4 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agnoCurrentRef" optional="true" type="replace" after="AND         y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwnerRef"/>
        
  </SqlMethod> 
   <SqlMethod name="selectFactAcctRevenue" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT ID, (SUM(QTY)-SUM(QTYCREDIT)) AS QTY,
        (SUM(intialamtdr)-SUM(intialamtcr)) AS QTY_REF,
        (SUM(currentintialamtdr)-SUM(currentintialamtcr))AS QTYCREDIT,SUM(QTYCREDIT_REF) as QTYCREDIT_REF
        FROM (
        SELECT m.C_ElementValue_ID as id, COALESCE(f.AMTACCTDR,0) AS qty, 
        COALESCE(f.AMTACCTCR,0) AS qtyCredit, 0 as qty_ref, 0 as qtyCredit_ref,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN ('1') 
                AND m.AD_Client_ID IN ('1')
                AND 1=1 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 0=0 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND Y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE m.AD_Org_ID IN('2') 
                AND m.AD_Client_ID IN('2') 
                AND 2=2 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 1=1 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype IN ('E','R')
            AND y.YEAR IN ('1') 
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
        UNION ALL
        SELECT m.C_ElementValue_ID as id, 0 AS QTY, 0 as qtyCredit, COALESCE(f.AMTACCTDR,0) AS qty_ref, 
                COALESCE(f.AMTACCTCR,0) AS qtyCredit_ref ,m.isactive as active,
                case when (DATEACCT < to_date(?))
                then  AMTACCTCR else 0 end as intialamtcr,
                case when (DATEACCT < to_date(?))
                then  AMTACCTDR else 0 end as intialamtdr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtcr,
                case when (DATEACCT < to_date(?))
                then  0 else 0 end as currentintialamtdr
                FROM C_ElementValue m, Fact_Acct f, C_Period p, C_Year y 
                WHERE   m.AD_Org_ID IN('2') 
                AND   m.AD_Client_ID IN('2') 
                AND 3=3 
                AND f.FACTACCTTYPE <> 'R'
                AND f.FACTACCTTYPE <> 'C'
                AND m.C_ElementValue_ID = f.Account_ID
            AND 4=4 AND f.AD_ORG_ID IN ('1')
            AND f.C_PERIOD_ID = p.C_PERIOD_ID 
            AND p.C_YEAR_ID = y.C_YEAR_ID
            AND m.accounttype IN ('A','L','O')
            AND f.DATEACCT < to_date(?)
            and not exists (select 1 from ad_org_closing, c_year year 
                           where open_fact_acct_group_id = f.fact_acct_group_id
                           and ad_org_closing.c_year_id = year.c_year_id
                           and year.year <> ?)
           
           
        ) AA
        GROUP BY ID
      ]]></Sql>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN (" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="dateFrom" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateTo" optional="true" after="AND 1=1 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 1=1 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 0=0 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agno" optional="true" type="replace" after="AND Y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwner"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 2=2 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 2=2 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 1=1 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="agnoRef" optional="true" type="replace" after="AND y.YEAR IN (" text="'1'"/>
        <Parameter name="openingEntryOwnerRef"/>
        
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="WHERE   m.AD_Org_ID IN(" text="'2'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="AND   m.AD_Client_ID IN(" text="'2'"/>
        <Parameter name="dateFromRef" optional="true" after="AND 3=3 "><![CDATA[ AND f.DATEACCT >= to_date(?)]]></Parameter>
        <Parameter name="dateToRef" optional="true" after="AND 3=3 "><![CDATA[ AND f.DATEACCT < to_date(?)]]></Parameter>
        <Parameter name="acctschema" optional="true" after="AND 3=3 "><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
        <Parameter name="org" optional="true" type="replace" after="AND 4=4 AND f.AD_ORG_ID IN (" text="'1'"/>
        <Parameter name="parFrmPerStrDate"/>
        <Parameter name="openingEntryOwnerRef"/>
  </SqlMethod> 
  <SqlMethod name="selectForms" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT m.C_ElementValue_ID as id, o.account_id as node_id, 'N' as ACCOUNTSIGN
        FROM C_ElementValue m, C_ELEMENTVALUE_OPERAND o  
        WHERE m.isActive='Y' 
        AND m.AD_Org_ID IN('1') 
        AND m.AD_Client_ID IN('1') 
        AND m.C_ElementValue_ID = o.C_ElementValue_ID
        AND o.isactive = 'Y' 
        order by m.C_elementvalue_id, o.seqno
      ]]></Sql>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'1'"/>
  </SqlMethod>
  <SqlMethod name="selectOperands" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT m.C_ElementValue_ID as id, o.account_id as node_id, o.sign
        FROM C_ElementValue m, C_ELEMENTVALUE_OPERAND o, C_ElementValue n
        WHERE m.isActive='Y' 
        AND m.AD_Org_ID IN('1') 
        AND m.AD_Client_ID IN('1') 
        AND m.C_Element_ID = ?
        AND m.C_ElementValue_ID = o.C_ElementValue_ID
        AND n.C_ElementValue_ID = o.C_ElementValue_ID
        AND o.isactive = 'Y' 
        order by m.C_elementvalue_id, o.seqno
      ]]></Sql>
        <Parameter name="adOrgClient" type="replace" optional="true" after="m.AD_Org_ID IN(" text="'1'"/>
        <Parameter name="adUserClient" type="replace" optional="true" after="m.AD_Client_ID IN(" text="'1'"/>
        <Parameter name="element"/>
  </SqlMethod>
</SqlClass>
