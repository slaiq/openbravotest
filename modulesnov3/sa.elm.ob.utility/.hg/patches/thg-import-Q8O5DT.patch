# HG changeset patch
# User sathishkumar<sathish@qualiantech.com>
# Date 1602045554 -19800
#      Wed Oct 07 10:09:14 2020 +0530
# Node ID 93864a5bf24694fed8e5240fef9838b050552b6c
# Parent  c4acfd025efb461b776674e223898fbe74ffc629
fixes in rdv pki changes

diff --git a/src/sa/elm/ob/utility/ad_process/digitalsignature/RDVAttachmentDMSImpl.java b/src/sa/elm/ob/utility/ad_process/digitalsignature/RDVAttachmentDMSImpl.java
--- a/src/sa/elm/ob/utility/ad_process/digitalsignature/RDVAttachmentDMSImpl.java
+++ b/src/sa/elm/ob/utility/ad_process/digitalsignature/RDVAttachmentDMSImpl.java
@@ -49,12 +49,15 @@
           if (fileBase64 != null && attachment.getEutDmsAttachpath() == null
               && "pdf".equals(extension)) {
             if (rdvtrnsaction.getEutDmsrecordpath() != null) {
-
+              log.debug("Inside the add attachment block");
               DMSIntegrationLog dmslog = DMSUtility.createDMSIntegrationLog(null,
                   DMSConstants.DMS_ADD, rdvtrnsaction);
+              String recProfileURI = GetServiceAccount.getProperty(DMSConstants.DMS_PROFILE_URI);
 
-              addAttachmentResponse = dmsGRP.addAttachmentinDMS(rdvtrnsaction.getEutDmsrecordpath(),
-                  fileBase64, attachment.getName(), attachment.getName());
+              addAttachmentResponse = dmsGRP.addAttachmentinDMS(
+                  recProfileURI.concat(rdvtrnsaction.getEutDmsrecordpath()), fileBase64,
+                  attachment.getName(), attachment.getName());
+              log.debug("Response from server" + addAttachmentResponse);
 
               if (addAttachmentResponse != null) {
                 if (!addAttachmentResponse.isHasError()) {
@@ -81,6 +84,7 @@
               rdvtrnsaction.setEutApprovalPosition(DMSConstants.DEFAULT_APPROVAL_POSITION);
               OBDal.getInstance().save(rdvtrnsaction);
               OBDal.getInstance().flush();
+              log.debug("Inside the create record and attachment block");
 
               DMSIntegrationLog dmslog = DMSUtility.createDMSIntegrationLog(null,
                   DMSConstants.DMS_CREATE, rdvtrnsaction);
@@ -90,15 +94,18 @@
               response = dmsGRP.sendReportToDMS(profileURI, fileBase64, nodeID,
                   rdv.getDocumentNo() + "-" + rdvtrnsaction.getTXNVersion(),
                   rdv.getDocumentNo() + "-" + rdvtrnsaction.getTXNVersion(), dmsAttributes);
-
+              log.info("dmsreonseee:" + response);
               if (response != null) {
                 if (!response.isHasError()) {
+                  log.info("dmsreonseee1:" + response);
                   dmslog.setPkirequest(null);
                   dmslog.setApprovalposition(null);
                   dmslog.setResponsemessage(response.getResponse());
                   dmslog.setAlertStatus(DMSConstants.DMS_SUCCESS);
                   dmslog.setAttachmentpath(response.getAttachmentPath());
+                  log.info("dmsreonseee1 getRequest:" + response.getRequest().toString());
                   dmslog.setRequest(response.getRequest().toString());
+                  log.info("dmsreonseee1 getResponse():" + response.getResponse());
                   dmslog.setResponsemessage(response.getResponse());
                   rdvtrnsaction.setEutDmsrecordpath(response.getRecordPath());
                   attachment.setEutDmsAttachpath(response.getAttachmentPath());
diff --git a/src/sa/elm/ob/utility/dms/hook/DMSRDVCompletionHook.java b/src/sa/elm/ob/utility/dms/hook/DMSRDVCompletionHook.java
--- a/src/sa/elm/ob/utility/dms/hook/DMSRDVCompletionHook.java
+++ b/src/sa/elm/ob/utility/dms/hook/DMSRDVCompletionHook.java
@@ -94,6 +94,7 @@
       if ("Y".equals(preferenceValue)) {
 
         if ("submit".equals(status)) {
+          log.debug("inside submit block");
 
           File file = generateReport(rdv);
           rdv.setEUTDocumentType(documentType);
@@ -117,25 +118,31 @@
           }
 
           if (rdv.getEutDmsrecordpath() == null) {
+            log.debug("inside create record and attachment block ");
             response = dmsGRP.sendReportToDMS(profileURI, responseData, nodeID,
                 rdvheader.getDocumentNo() + "-" + rdv.getTXNVersion(),
                 rdvheader.getDocumentNo() + "-" + rdv.getTXNVersion(), dmsAttributes);
+            log.debug("inside create record and attachmentblock response" + response);
             if (response != null) {
               setCreateResponse(response, dmslog, userId, documentName, rdv, documentType, tabId,
                   vars, attachmentPathList, documentNameList, processIdList);
             }
           } else {
-            addResponse = dmsGRP.addAttachmentinDMS(profileURI, responseData, documentName,
-                documentName);
-            setAddAttachmentResponse(addResponse, dmslog, userId, documentName, rdv, documentType,
-                tabId, vars, attachmentPathList, documentNameList, processIdList);
+            log.debug("inside add attachment block ");
+            addResponse = dmsGRP.addAttachmentinDMS(profileURI.concat(rdv.getEutDmsrecordpath()),
+                responseData, documentName, documentName);
+            log.debug("inside add attachment block response" + addResponse);
+            if (addResponse != null) {
+              setAddAttachmentResponse(addResponse, dmslog, userId, documentName, rdv, documentType,
+                  tabId, vars, attachmentPathList, documentNameList, processIdList);
+            }
           }
-
           OBDal.getInstance().flush();
         } else if (status.equals("approve")) {
+          log.debug("inside approve block");
 
           if (isFinalLevelApproval) {
-
+            log.debug("inside isFinalLevelApproval block");
             OBQuery<Attachment> attachQry = OBDal.getInstance().createQuery(Attachment.class,
                 "as e where e.record = :recordId and e.eutDmsAttachpath is not null and e.table.id ='B4146A5918884533B13F57A574EFF9D5' order by e.creationDate desc");
             attachQry.setNamedParameter("recordId", rdv.getId());
@@ -164,37 +171,36 @@
               file.delete();
 
               if (rdv.getEutDmsrecordpath() == null) {
+                log.debug("inside create record and attachment block ");
                 response = dmsGRP.sendReportToDMS(profileURI, responseData, nodeID,
                     rdvheader.getDocumentNo() + "-" + rdv.getTXNVersion(),
                     rdvheader.getDocumentNo() + "-" + rdv.getTXNVersion(), dmsAttributes);
-
+                log.debug("inside create record and attachmentblock response" + response);
                 if (response != null) {
                   setCreateResponse(response, dmslog, userId, documentName, rdv, documentType,
                       tabId, vars, attachmentPathList, documentNameList, processIdList);
                 }
-
               } else {
-                addResponse = dmsGRP.addAttachmentinDMS(profileURI, responseData, documentName,
+                log.debug("inside add attachment block ");
+                addResponse = dmsGRP.addAttachmentinDMS(
+                    profileURI.concat(rdv.getEutDmsrecordpath()), responseData, documentName,
                     documentName);
-
+                log.debug("inside add attachment block response" + addResponse);
                 if (addResponse != null) {
-                  addResponse = dmsGRP.addAttachmentinDMS(profileURI, responseData, documentName,
-                      documentName);
                   setAddAttachmentResponse(addResponse, dmslog, userId, documentName, rdv,
                       documentType, tabId, vars, attachmentPathList, documentNameList,
                       processIdList);
                 }
-
               }
-
             } catch (Exception e) {
               log.error("Exception in Generating report: ", e);
               e.printStackTrace();
               OBDal.getInstance().rollbackAndClose();
             }
-
             OBDal.getInstance().flush();
           } else {
+            log.debug("inside adding sign in the attachment block response" + addResponse);
+
             DMSIntegrationLog dmslog = DMSUtility.createDMSIntegrationLog(null,
                 DMSConstants.DMS_UPDATE, rdv);
 
@@ -300,6 +306,8 @@
       List<String> documentList, List<String> processList) {
     try {
       OBContext.setAdminMode();
+      log.debug("inside setCreateResponse");
+
       if (!response.isHasError()) {
         PKIRequestVO pkiRequest = null;
         if (attachmentList.size() > 0) {
@@ -354,6 +362,7 @@
       List<String> documentList, List<String> processList) {
     try {
       OBContext.setAdminMode();
+      log.debug("inside setAddAttachmentResponse");
 
       if (!response.isHasError()) {
         PKIRequestVO pkiRequest = null;
diff --git a/src/sa/elm/ob/utility/dms/util/DMSUtility.java b/src/sa/elm/ob/utility/dms/util/DMSUtility.java
--- a/src/sa/elm/ob/utility/dms/util/DMSUtility.java
+++ b/src/sa/elm/ob/utility/dms/util/DMSUtility.java
@@ -72,6 +72,7 @@
       DMSXmlAttributes attributes) {
     CreateRecordWithAttachmentRequest request = new CreateRecordWithAttachmentRequest();
     try {
+      log.debug("Inside the createRequestAttachment");
       request.setAttachmentBase64(
           new JAXBElement<String>(_Attachmentbase64_QNAME, String.class, attachmentBase64));
       request
@@ -127,6 +128,7 @@
     } catch (Exception e) {
       log.error("Exception in creating request" + e.getMessage());
     }
+    log.debug("End of the createRequestAttachment block");
     return request;
   }
 
@@ -139,11 +141,13 @@
   public static GetAttachmentRequest getattachment(String profileURI) {
     GetAttachmentRequest getRequest = new GetAttachmentRequest();
     try {
+      log.debug("start of the getattachment block");
       getRequest
           .setProfileURI(new JAXBElement<String>(_ProfileURI_QNAME, String.class, profileURI));
     } catch (Exception e) {
       log.error("Exception in creating request" + e.getMessage());
     }
+    log.debug("end of the getattachment block");
     return getRequest;
   }
 
@@ -157,11 +161,13 @@
 
     DeleteRecordRequest getRequest = new DeleteRecordRequest();
     try {
+      log.debug("start of the deleteRecordRequest block");
       getRequest
           .setProfileURI(new JAXBElement<String>(_ProfileURI_QNAME, String.class, profileURI));
     } catch (Exception e) {
       log.error("Exception in creating request" + e.getMessage());
     }
+    log.debug("end of the deleteRecordRequest block");
     return getRequest;
   }
 
@@ -175,11 +181,13 @@
 
     DeleteAttachmentRequest getRequest = new DeleteAttachmentRequest();
     try {
+      log.debug("Start of the deleteAttachmentRequest block");
       getRequest
           .setProfileURI(new JAXBElement<String>(_ProfileURI_QNAME, String.class, profileURI));
     } catch (Exception e) {
       log.error("Exception in creating request" + e.getMessage());
     }
+    log.debug("End of the deleteAttachmentRequest block");
     return getRequest;
   }
 
@@ -192,16 +200,18 @@
   public static GetRecordRequest getRecordRequest(String profileURI) {
     GetRecordRequest getRequest = new GetRecordRequest();
     try {
+      log.debug("Start of the getRecordRequest block");
       getRequest
           .setProfileURI(new JAXBElement<String>(_ProfileURI_QNAME, String.class, profileURI));
     } catch (Exception e) {
       log.error("Exception in creating request" + e.getMessage());
     }
+    log.debug("End of the getRecordRequest block");
     return getRequest;
   }
 
   /**
-   * This methos is used to create add attachment request
+   * This method is used to create add attachment request
    * 
    * @param profileURI
    * @param attachmentBase64
@@ -214,17 +224,20 @@
       String attachmentBase64, String documentName, String description) {
     AddAttachmentRequest request = new AddAttachmentRequest();
     try {
+      log.debug("Start of the addAttachmentRequest block");
       request.setAttachmentBase64(
           new JAXBElement<String>(_Attachmentbase64_QNAME, String.class, attachmentBase64));
       request
           .setDescription(new JAXBElement<String>(_Description_QNAME, String.class, description));
       request.setDocumentName(
-          new JAXBElement<String>(_DocumentName_QNAME, String.class, documentName + ".pdf"));
+          new JAXBElement<String>(_DocumentName_QNAME, String.class, documentName));
       request.setProfileURI(new JAXBElement<String>(_ProfileURI_QNAME, String.class, profileURI));
 
     } catch (Exception e) {
       log.error("Exception in creating Add attachment request" + e.getMessage());
     }
+    log.debug("end of the addAttachmentRequest block");
+
     return request;
   }
 
@@ -239,6 +252,7 @@
     String recordId = null;
     try {
       OBContext.setAdminMode();
+      log.debug("start of the createResponse block");
       if (response != null) {
         if (response.isHasError()) {
           grpResponse.setHasError(true);
@@ -261,8 +275,11 @@
       }
       grpResponse.setRequest(DMSUtility.convertDMSRequesttoString(req));
     } catch (Exception e) {
+      log.error("eror while creating response " + e.getMessage());
+    } finally {
       OBContext.restorePreviousMode();
     }
+    log.debug("end of the createResponse block");
     return grpResponse;
   }
 
@@ -303,6 +320,7 @@
     DMSIntegrationLog dmsLog = OBProvider.getInstance().get(DMSIntegrationLog.class);
     int seqno = 0;
     try {
+      log.debug("start of the createDMSIntegrationLog block");
       OBContext.setAdminMode();
       if (invoice != null) {
         seqno = invoice.getEutDmsintegrationLogList().size();
@@ -321,12 +339,14 @@
     } catch (Exception e) {
       log.debug("Error while creating dms intgeration log" + e.getMessage());
     }
+    log.debug("end of the createDMSIntegrationLog block");
     return dmsLog;
   }
 
   public static String convertDMSRequesttoString(CreateRecordWithAttachmentRequest request) {
     String str = "";
     try {
+      log.debug("start of the convertDMSRequesttoString block");
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(CreateRecordWithAttachmentRequest.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -336,12 +356,22 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSRequesttoString block");
+    log.debug("convertDMSRequesttoString:" + str);
+    if (str != null) {
+      if (str.length() > 80000) {
+        return str.substring(0, 79999);
+      } else {
+        return str;
+      }
+    }
+    return str;
   }
 
   public static String convertDMSGetRequesttoString(GetAttachmentRequest request) {
     String str = "";
     try {
+      log.debug("start of the convertDMSGetRequesttoString block");
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(GetAttachmentRequest.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -351,12 +381,23 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSGetRequesttoString block");
+    log.debug("convertDMSGetRequesttoString:" + str);
+
+    if (str != null) {
+      if (str.length() > 80000) {
+        return str.substring(0, 79999);
+      } else {
+        return str;
+      }
+    }
+    return str;
   }
 
   public static String convertDMSResponsetoString(Response response) {
     String str = "";
     try {
+      log.debug("start of the convertDMSResponsetoString block");
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(Response.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -366,12 +407,14 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSResponsetoString block");
+    return str;
   }
 
   public static String convertDMSAddAttachmentRequesttoString(AddAttachmentRequest request) {
     String str = "";
     try {
+      log.debug("start of the convertDMSAddAttachmentRequesttoString block");
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(AddAttachmentRequest.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -381,12 +424,24 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSAddAttachmentRequesttoString block");
+    log.debug("convertDMSAddAttachmentRequesttoString:" + str);
+
+    if (str != null) {
+      if (str.length() > 80000) {
+        return str.substring(0, 79999);
+      } else {
+        return str;
+      }
+    }
+    return str;
   }
 
   public static String convertDMSDeleteRequesttoString(DeleteRecordRequest request) {
     String str = "";
     try {
+      log.debug("start of the convertDMSDeleteRequesttoString block");
+
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(DeleteRecordRequest.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -396,12 +451,23 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSDeleteRequesttoString block");
+    log.debug("convertDMSDeleteRequesttoString:" + str);
+
+    if (str != null) {
+      if (str.length() > 80000) {
+        return str.substring(0, 79999);
+      } else {
+        return str;
+      }
+    }
+    return str;
   }
 
   public static String convertDMSDeleteAttachmentRequesttoString(DeleteAttachmentRequest request) {
     String str = "";
     try {
+      log.debug("start of the convertDMSDeleteAttachmentRequesttoString block");
       ByteArrayOutputStream baos = new ByteArrayOutputStream();
       JAXBContext ctx = JAXBContext.newInstance(DeleteAttachmentRequest.class);
       Marshaller marshaller = ctx.createMarshaller();
@@ -411,7 +477,17 @@
     } catch (Exception e) {
       e.printStackTrace();
     }
-    return str.substring(0, 100000);
+    log.debug("end of the convertDMSDeleteAttachmentRequesttoString block");
+    log.debug("convertDMSDeleteAttachmentRequesttoString:" + str);
+
+    if (str != null) {
+      if (str.length() > 80000) {
+        return str.substring(0, 79999);
+      } else {
+        return str;
+      }
+    }
+    return str;
   }
 
   /**
@@ -455,6 +531,7 @@
       GetAttachmentRequest req, String exceptionMsg) {
     GetAttachmentGRPResponse grpResponse = new GetAttachmentGRPResponse();
     try {
+      log.debug("start of the createGRPGetResponse block");
       OBContext.setAdminMode();
       if (response != null) {
         if (!response.isHasError()) {
@@ -473,8 +550,11 @@
       }
       grpResponse.setRequest(DMSUtility.convertDMSGetRequesttoString(req));
     } catch (Exception e) {
+      log.error("error in createGRPGetResponse" + e.getMessage());
+    } finally {
       OBContext.restorePreviousMode();
     }
+    log.debug("end of the createGRPGetResponse block");
     return grpResponse;
   }
 
@@ -487,6 +567,8 @@
       DeleteRecordRequest req, String exceptionMsg) {
     DeleteRecordGRPResponse grpResponse = new DeleteRecordGRPResponse();
     try {
+      log.debug("start of the createGRPDeleteRecordResponse block");
+
       OBContext.setAdminMode();
       if (response != null) {
         if (!response.isHasError()) {
@@ -508,6 +590,8 @@
     } catch (Exception e) {
       OBContext.restorePreviousMode();
     }
+    log.debug("end of the createGRPDeleteRecordResponse block");
+
     return grpResponse;
   }
 
@@ -520,6 +604,8 @@
       DeleteAttachmentRequest req, String exceptionMsg) {
     DeleteAttachmentResponseGRP grpResponse = new DeleteAttachmentResponseGRP();
     try {
+      log.debug("start of the createGRPDeleteAttachmentResponse block");
+
       OBContext.setAdminMode();
       if (response != null) {
         if (!response.isHasError()) {
@@ -539,8 +625,12 @@
       }
       grpResponse.setRequest(DMSUtility.convertDMSDeleteAttachmentRequesttoString(req));
     } catch (Exception e) {
+
+    } finally {
       OBContext.restorePreviousMode();
     }
+    log.debug("end of the createGRPDeleteAttachmentResponse block");
+
     return grpResponse;
   }
 
@@ -553,6 +643,7 @@
       AddAttachmentRequest req, String exceptionmsg) {
     AddAttachmentResponseGRP grpResponse = new AddAttachmentResponseGRP();
     try {
+      log.debug("start of the createAddAttachmentResponse block");
       OBContext.setAdminMode();
       if (response != null) {
         if (response.isHasError()) {
@@ -574,8 +665,11 @@
       }
       grpResponse.setRequest(DMSUtility.convertDMSAddAttachmentRequesttoString(req));
     } catch (Exception e) {
+      log.error("Error while createAddAttachmentResponse" + e.getMessage());
+    } finally {
       OBContext.restorePreviousMode();
     }
+    log.debug("end of the createAddAttachmentResponse block");
     return grpResponse;
   }
 
diff --git a/web/sa.elm.ob.utility/js/eut-standard-view.js b/web/sa.elm.ob.utility/js/eut-standard-view.js
--- a/web/sa.elm.ob.utility/js/eut-standard-view.js
+++ b/web/sa.elm.ob.utility/js/eut-standard-view.js
@@ -2750,9 +2750,9 @@
                                 "Authorization": "Basic YWRtaW46MTIz"
                             },
                             "ProfileURI": data.attachmentPath.split(','),
-                            "ProcessId": data.grpRequestID.split(','),
-                            "body": {
-                                "UserId": data.userId
+                            "ProcessId":  data.grpRequestID.split(','),
+                            "body": {                          
+                                "UserId": data.userId                             
                             }
                         }
                     },
@@ -2762,17 +2762,15 @@
                             "header": {
                                 "Authorization": "Basic YWRtaW46MTIz"
                             },
-                            "DocumentName": data.documentName.split(','),
-                            "ProcessId": data.grpRequestID.split(','),
-                            "body": {
-                                "Description": "sampleDesc",
-                                "ProfileURI": data.attachmentPath.split(',')
+                            "DocumentName": data.documentName.split(','),                     
+                            "body": {                                                       
+                                "Description": "sampleDesc"
                             }
                         }
                     },
                     "apperance": {
-                        "page": data.page,
-                        "width": "250",
+                        "page": data.page===undefined ? 1:data.page ,
+                        "width": "150",
                         "height": "50",
                         "marginx": "20",
                         "marginy": "40",
