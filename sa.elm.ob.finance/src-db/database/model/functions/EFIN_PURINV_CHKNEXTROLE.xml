<?xml version="1.0"?>
  <database name="FUNCTION EFIN_PURINV_CHKNEXTROLE">
    <function name="EFIN_PURINV_CHKNEXTROLE" type="VARCHAR">
      <parameter name="p_orgid" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_role_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_doctype" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_grandtotal" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_record_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
	* The contents of this file are subject to the Openbravo  Public  License
	* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
	* Version 1.1  with a permitted attribution clause; you may not  use this
	* file except in compliance with the License. You  may  obtain  a copy of
	* the License at http://www.openbravo.com/legal/license.html
	* Software distributed under the License  is  distributed  on  an "AS IS"
	* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
	* License for the specific  language  governing  rights  and  limitations
	* under the License.
	* The Original Code is Openbravo ERP.
	* The Initial Developer of the Original Code is Openbravo SLU
	* All portions are Copyright (C) 2001-2008 Openbravo SLU
	* All Rights Reserved.
	* Contributor(s):  ______________________________________.
	************************************************************************/
	vTree VARCHAR2(32);
	v_prepayInv char(1);
	v_prepayapp char(1);
	v_doctype VARCHAR(60);
	v_display VARCHAR(60);
	vOrgList VARCHAR(32767);
	v_tempId VARCHAR2(32);
	 Cur_ChkNextRole RECORD;
	  Cur_GetNextRole RECORD;
	  v_NextRoleApp char(1);
	    v_NextDocRole char(1):='N';
	    v_count NUMBER;
	    v_NextUser char(1);
	    v_org_id VARCHAR2(32);
	BEGIN
		
		IF p_orgid is not null THEN

		--Get Document Type
		select em_efin_isprepayinv,em_efin_isprepayinvapp into v_prepayInv,v_prepayapp from c_doctype where c_doctype_id= p_doctype;  

		IF(v_prepayInv='Y') THEN
			v_doctype:='EUT_110';  --AP PrePayment Invoice
		ELSE IF (v_prepayapp='Y') THEN
			v_doctype:='EUT_109';  -- AP Prepayment Application
		ELSE IF(v_prepayInv='N' AND v_prepayapp='N') THEN
			v_doctype:='EUT_101';  -- AP  Invoice
		END IF;
		END IF;
		END IF;
		-- check particular org does have document rule 

		select count(*) into v_count  from eut_documentrule_header  where document_type =v_doctype  and ad_org_id=p_orgid;
		if(v_count > 0) then 
		--Check Whethere  Next Level Document Rule Present or Not. 
		v_org_id:=p_orgid;
		FOR Cur_ChkNextRole IN(
		
						 select qdrl.ad_role_id  from eut_documentrule_lines qdrl 
						join (select qdrh.eut_documentrule_header_id, qdrh.rulesequenceno, qdrl.rolesequenceno 
						from eut_documentrule_header qdrh 
						join eut_documentrule_lines qdrl on qdrh.eut_documentrule_header_id = qdrl.eut_documentrule_header_id 
						where qdrh.ad_client_id = p_client_id
						and qdrh.ad_org_id= p_orgid
						and qdrh.document_type = v_doctype
						and qdrh.rulevalue <=p_grandtotal and qdrl.ad_role_id= p_role_id
						 order by qdrh.rulevalue desc limit 1) qdrh on qdrh.eut_documentrule_header_id = qdrl.eut_documentrule_header_id 
						left join ad_role qr on qdrl.ad_role_id = qr.ad_role_id where qdrl.ad_client_id = p_client_id 
						 and qdrl.ad_org_id= p_orgid
						and qdrl.rolesequenceno = (qdrh.rolesequenceno)+1 order by qdrl.roleorderno
						)
		LOOP

			v_NextDocRole:='Y';
			v_org_id:=p_orgid;
			raise notice '%firsrole',Cur_ChkNextRole.ad_role_id;
			
			IF(Cur_ChkNextRole.ad_role_id is not null) THEN
			--Get Next Role For Particular Record
			FOR Cur_GetNextRole IN(
							select ln.ad_role_id from c_invoice inv 
							left join eut_next_role_line ln on ln.eut_next_role_id= inv.em_eut_next_role_id
							where inv.c_invoice_id=p_record_id
						)
			LOOP
				v_tempId :=Cur_GetNextRole.ad_role_id;
				raise notice '%nextrole',v_tempId;
				IF(v_tempId is not null) THEN
					IF(Cur_ChkNextRole.ad_role_id=v_tempId) THEN
						v_display:='Y';
						--raise notice '%',v_display;
					ELSE
					CONTINUE;
				END  IF;
				ELSE
					EXIT WHEN v_tempId is  null;
				END  IF;
			END LOOP;
			EXIT WHEN v_tempId is  null;
			END IF;
		END LOOP;
		raise notice '%last',v_tempId;
		END IF;
		raise notice '%',v_display;
		end if;
			
		--Particular Org does not have document rule check for parent org document rule
		IF(v_count=0) THEN
		--Get Parent Org
			SELECT ad_tree_id  INTO vTree  
			FROM ad_tree 
			WHERE ad_client_id=p_client_id
			AND treetype='OO';
			      WHILE (p_orgid is not null and p_orgid <> '')
			      LOOP
				SELECT parent_id INTO p_orgid
				FROM ad_treenode
				WHERE node_id = p_orgid
				AND ad_tree_id = vTree;
				IF p_orgid is not null THEN
				v_org_id:=p_orgid;

						--Check Whethere  Next Level Document Rule Present or Not. 
					FOR Cur_ChkNextRole IN(
						 select qdrl.ad_role_id  from eut_documentrule_lines qdrl 
						join (select qdrh.eut_documentrule_header_id, qdrh.rulesequenceno, qdrl.rolesequenceno 
						from eut_documentrule_header qdrh 
						join eut_documentrule_lines qdrl on qdrh.eut_documentrule_header_id = qdrl.eut_documentrule_header_id 
						where qdrh.ad_client_id = p_client_id
						and qdrh.ad_org_id= p_orgid
						and qdrh.document_type = v_doctype
						and qdrh.rulevalue <=p_grandtotal and qdrl.ad_role_id= p_role_id
						 order by qdrh.rulevalue desc limit 1) qdrh on qdrh.eut_documentrule_header_id = qdrl.eut_documentrule_header_id 
						left join ad_role qr on qdrl.ad_role_id = qr.ad_role_id where qdrl.ad_client_id = p_client_id 
						 and qdrl.ad_org_id= p_orgid
						and qdrl.rolesequenceno = (qdrh.rolesequenceno)+1 order by qdrl.roleorderno
						)
					LOOP
						v_NextDocRole:='Y';
						v_org_id:=p_orgid;
						--Get Next Role For Particular Record
						IF(Cur_ChkNextRole.ad_role_id is not null) THEN
						FOR Cur_GetNextRole IN(
							select ln.ad_role_id from c_invoice inv 
							left join eut_next_role_line ln on ln.eut_next_role_id= inv.em_eut_next_role_id
							where inv.c_invoice_id=p_record_id
						)
						LOOP
						v_tempId :=Cur_GetNextRole.ad_role_id;
						IF(v_tempId is not null) THEN
							IF(Cur_ChkNextRole.ad_role_id=v_tempId) THEN
							v_display:='Y';
							ELSE
							CONTINUE;
							END IF;
						ELSE
						EXIT WHEN v_tempId is  null;
						END IF;
						END LOOP;
						EXIT WHEN v_tempId is  null;
						END IF;
				END LOOP;
				END IF;
				EXIT WHEN v_display is not null;
			     END LOOP;			
				END IF;

				
		
		FOR Cur_GetNextRole IN(
			select ln.ad_role_id,ln.ad_user_id from c_invoice inv 
			left join eut_next_role_line ln on ln.eut_next_role_id= inv.em_eut_next_role_id
			where inv.c_invoice_id=p_record_id
				)
		LOOP
			raise notice '%loop1',Cur_GetNextRole.ad_user_id;
			raise notice '%p_role_id',p_user_id;
			/*IF(Cur_GetNextRole.ad_user_id is not null and Cur_GetNextRole.ad_user_id=p_user_id) THEN
			v_NextUser:='Y';
			END IF;*/
			IF(Cur_GetNextRole.ad_role_id= p_role_id ) THEN
			v_NextRoleApp:='N';
			Exit when  v_NextRoleApp is not null;
			END IF;
			
			--END IF;
		END LOOP;

		select count(*) into v_count from c_salesregion where em_efin_user_id  =p_user_id;
		if(v_count > 0) then

		select count(ln.ad_role_id) into v_count  from eut_documentrule_header hd
		 left join eut_documentrule_lines ln on ln.eut_documentrule_header_id= hd.eut_documentrule_header_id
		 left join ad_role rl on rl.ad_role_id=ln.ad_role_id  
		  where hd.ad_client_id =p_client_id and hd.ad_org_id=v_org_id  and hd.document_type=v_doctype   
		  and rl.em_efin_departmenthead='Y';
		raise notice '%--%--%',v_org_id,p_client_id,v_doctype;

		if(v_count > 0) then 
		 v_NextRoleApp:='Y';
		end if;
		end if;
		raise notice '%v_NextDocRole',v_NextDocRole;
		raise notice '%v_NextRoleApp',v_NextRoleApp;
		raise notice '%v_display',v_display;
		
		IF(v_display is null and v_NextDocRole='N' and (v_NextRoleApp='N'or v_NextRoleApp is null)) THEN-- AND v_NextUser is null  
			v_display:='N';
		ELSE 
			v_display:='Y';
		END IF;
	    raise notice '%',v_display;
	    RETURN  v_display;
END EFIN_PURINV_CHKNEXTROLE
]]></body>
    </function>
  </database>
