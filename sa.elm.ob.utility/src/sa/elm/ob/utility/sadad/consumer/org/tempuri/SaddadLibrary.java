package sa.elm.ob.utility.sadad.consumer.org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.openbravo.base.session.OBPropertiesProvider;

/**
 * This class was generated by Apache CXF 3.2.7 2019-01-06T15:52:33.125+03:00 Generated source
 * version: 3.2.7
 *
 */
@WebServiceClient(name = "SaddadLibrary", wsdlLocation = "http://intg-srv02.moc.gov.sa:3050/SaddadService.svc?wsdl", targetNamespace = "http://tempuri.org/")
public class SaddadLibrary extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE = new QName("http://tempuri.org/", "SaddadLibrary");
  public final static QName BasicHttpBindingISaddadLibrary = new QName("http://tempuri.org/",
      "BasicHttpBinding_ISaddadLibrary");
  private final static String SADAD_WSDL_URL = "sadad.wsdl.url";
  static {
    URL url = null;
    try {
      url = new URL(getProperty(SADAD_WSDL_URL));
    } catch (MalformedURLException e) {
      java.util.logging.Logger.getLogger(SaddadLibrary.class.getName()).log(
          java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
          "http://intg-srv02.moc.gov.sa:3050/SaddadService.svc?wsdl");
    }
    WSDL_LOCATION = url;
  }

  public SaddadLibrary(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public SaddadLibrary(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public SaddadLibrary() {
    super(WSDL_LOCATION, SERVICE);
  }

  public SaddadLibrary(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public SaddadLibrary(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  public SaddadLibrary(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   *
   * @return returns ISaddadLibrary
   */
  @WebEndpoint(name = "BasicHttpBinding_ISaddadLibrary")
  public ISaddadLibrary getBasicHttpBindingISaddadLibrary() {
    return super.getPort(BasicHttpBindingISaddadLibrary, ISaddadLibrary.class);
  }

  /**
   *
   * @param features
   *          A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported
   *          features not in the <code>features</code> parameter will have their default values.
   * @return returns ISaddadLibrary
   */
  @WebEndpoint(name = "BasicHttpBinding_ISaddadLibrary")
  public ISaddadLibrary getBasicHttpBindingISaddadLibrary(WebServiceFeature... features) {
    return super.getPort(BasicHttpBindingISaddadLibrary, ISaddadLibrary.class, features);
  }

  private static String getProperty(String key) {

    return OBPropertiesProvider.getInstance().getOpenbravoProperties().getProperty(key);
  }

}
